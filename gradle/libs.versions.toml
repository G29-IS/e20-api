[versions]
kotlin="1.9.0"
kotlinxCoroutines="1.7.3"
reflections="0.10.2"
ksp="1.9.0-1.0.13"

sentry="4.2.0"
sentryLogback="7.2.0"

shadow="8.1.1"

kotlinLogging="5.1.0"
logback="1.4.11"
slf4jApi="2.0.7"

dotenv="6.4.1"

kotlinxDatetime="0.5.0"

koin="3.5.0"
koinKsp="1.3.0"

exposed="0.44.1"
postgresql="42.6.0"
flyway="10.1.0"
jedis="4.4.3"

ktor="2.3.7"
ktorSwagger="2.7.2"
jsonSchemaGenerator="4.32.0"
konform="0.4.0"

googleApiClient="2.2.0"
springSecurityCrypto="6.1.3"
springLogging="1.2"

micrometerRegistryPrometheus="1.12.0"

junit="5.9.2"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
sentry = { id = "io.sentry.jvm.gradle", version.ref = "sentry" }
[libraries]
kotlinx-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
reflections = { group = "org.reflections", name = "reflections", version.ref  = "reflections" }

kotlin-logging = { group = "io.github.oshai", name = "kotlin-logging-jvm", version.ref = "kotlinLogging" }
logback = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
slf4j-api = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4jApi" }
sentry-logback = { group = "io.sentry", name = "sentry-logback", version.ref = "sentryLogback" }

dotenv = { group = "io.github.cdimascio", name = "dotenv-kotlin", version.ref = "dotenv" }

kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinxDatetime" }

koin-ksp = { group = "io.insert-koin", name = "koin-ksp-compiler", version.ref = "koinKsp" }
koin-annotations = { group = "io.insert-koin", name = "koin-annotations", version.ref = "koinKsp" }
koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-ktor = { group = "io.insert-koin", name = "koin-ktor", version.ref = "koin" }
koin-logger = { group = "io.insert-koin", name = "koin-logger-slf4j", version.ref = "koin" }

exposed-core = { group = "org.jetbrains.exposed", name = "exposed-core", version.ref = "exposed" }
exposed-dao = { group = "org.jetbrains.exposed", name = "exposed-dao", version.ref = "exposed" }
exposed-jdbc = { group = "org.jetbrains.exposed", name = "exposed-jdbc", version.ref = "exposed" }
exposed-java-time = { group = "org.jetbrains.exposed", name = "exposed-java-time", version.ref = "exposed" }
postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgresql" }
flyway = { group = "org.flywaydb", name = "flyway-core", version.ref = "flyway" }
flyway-postgres = { group = "org.flywaydb", name = "flyway-database-postgresql", version.ref = "flyway" }
jedis = { group = "redis.clients", name = "jedis", version.ref = "jedis" }

ktor-serialization = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor-server-core = { group = "io.ktor", name = "ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { group = "io.ktor", name = "ktor-server-netty", version.ref = "ktor" }
ktor-server-forwarded-header = { group = "io.ktor", name = "ktor-server-forwarded-header", version.ref = "ktor" }
ktor-server-call-logging = { group = "io.ktor", name = "ktor-server-call-logging", version.ref = "ktor" }
ktor-server-status-pages = { group = "io.ktor", name = "ktor-server-status-pages", version.ref = "ktor" }
ktor-server-content-negotiation = { group = "io.ktor", name = "ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-cors = { group = "io.ktor", name = "ktor-server-cors", version.ref = "ktor" }
ktor-server-auth = { group = "io.ktor", name = "ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { group = "io.ktor", name = "ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-resources = { group = "io.ktor", name = "ktor-server-resources", version.ref = "ktor" }
ktor-server-request-validation = { group = "io.ktor", name = "ktor-server-request-validation", version.ref = "ktor" }
ktor-server-rate-limit = { group = "io.ktor", name = "ktor-server-rate-limit", version.ref = "ktor" }
ktor-server-html-builder = { group = "io.ktor", name = "ktor-server-html-builder", version.ref = "ktor" }
ktor-micrometer = { group = "io.ktor", name = "ktor-server-metrics-micrometer", version.ref = "ktor" }
micrometer-registry-prometheus = { group = "io.micrometer", name = "micrometer-registry-prometheus", version.ref = "micrometerRegistryPrometheus" }
ktor-swagger = { group = "io.github.smiley4", name = "ktor-swagger-ui", version.ref = "ktorSwagger" }
json-schema-generator = { group = "com.github.victools", name = "jsonschema-generator", version.ref = "jsonSchemaGenerator" }

konform = { group = "io.konform", name = "konform-jvm", version.ref = "konform" }

ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-apache = { group = "io.ktor", name = "ktor-client-apache", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }

google-api-client = { group = "com.google.api-client", name = "google-api-client", version.ref = "googleApiClient" }
spring-security-crypto = { group = "org.springframework.security", name = "spring-security-crypto", version.ref = "springSecurityCrypto" }
spring-logging = { group = "commons-logging", name = "commons-logging", version.ref = "springLogging" }

junit = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit" }

[bundles]
logging = [
    "kotlin-logging",
    "logback",
    "sentry-logback"
]

koin = [
    "koin-core",
    "koin-annotations",
    "koin-ktor",
    "koin-logger"
]

postgres = [
    "postgresql",
    "exposed-core",
    "exposed-dao",
    "exposed-jdbc",
    "exposed-java-time",
    "flyway",
    "flyway-postgres"
]

ktor-server = [
    "ktor-server-core",
    "ktor-server-netty",
    "ktor-server-forwarded-header",
    "ktor-server-call-logging",
    "ktor-server-status-pages",
    "ktor-serialization",
    "ktor-server-content-negotiation",
    "ktor-server-cors",
    "ktor-server-auth",
    "ktor-server-auth-jwt",
    "ktor-server-resources",
    "ktor-server-request-validation",
    "ktor-server-rate-limit",
    "ktor-server-html-builder",
    "ktor-swagger",
    "json-schema-generator",
    "konform"
]

ktor-client = [
    "ktor-client-core",
    "ktor-client-apache",
    "ktor-client-logging",
    "ktor-serialization",
    "ktor-client-content-negotiation",
]

spring-security = [
    "spring-security-crypto",
    "spring-logging"
]

monitoring = [
    "ktor-micrometer",
    "micrometer-registry-prometheus"
]